apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}

group = 'com.github.netigenkluzowicz'
version = '0.9.4'

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    configurations.all {
        resolutionStrategy.force 'com.android.support:customtabs:27.1.1'
    }
    implementation 'com.android.support:support-v4:27.1.1'
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    api 'com.google.firebase:firebase-ads:17.1.2'
    api 'com.google.firebase:firebase-core:16.0.6'
    api 'com.google.firebase:firebase-crash:16.2.1'
    api "com.android.support:support-v13:27.1.1"
    api 'com.android.support:appcompat-v7:27.1.1'
    api 'com.google.code.gson:gson:2.8.5'
    api 'com.android.support:design:27.1.1'
    //RODO
    api 'com.android.support:appcompat-v7:27.1.1'
    api 'com.google.android.ads.consent:consent-library:1.0.7'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
